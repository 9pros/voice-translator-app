require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '12.4'
install! 'cocoapods', :deterministic_uuids => false

target 'VoiceTranslator' do
  config = use_native_modules!

  # Flags change depending on the env values.
  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    # Hermes is now enabled by default. Disable by setting this flag to false.
    # Upcoming versions of React Native may rely on get_default_flags(), but
    # we make it explicit here to aid in the React Native upgrade process.
    :hermes_enabled => flags[:hermes_enabled],
    :fabric_enabled => flags[:fabric_enabled],
    # Enables Flipper.
    #
    # Note that if you have use_frameworks! enabled, Flipper will not work and
    # you should disable the next line.
    :flipper_configuration => FlipperConfiguration.enabled,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  # ONNX Runtime for iOS
  pod 'onnxruntime-objc', '~> 1.16.0'
  
  # Audio processing
  pod 'AVFoundation'
  
  # File system access
  pod 'RNFS', :path => '../node_modules/react-native-fs'
  
  # Voice and audio libraries
  pod 'react-native-voice', :path => '../node_modules/react-native-voice'
  pod 'RNSound', :path => '../node_modules/react-native-sound'
  pod 'react-native-tts', :path => '../node_modules/react-native-tts'
  
  # Permissions
  pod 'Permission-Microphone', :path => '../node_modules/react-native-permissions/ios/Microphone'
  pod 'Permission-Contacts', :path => '../node_modules/react-native-permissions/ios/Contacts'
  pod 'Permission-SpeechRecognition', :path => '../node_modules/react-native-permissions/ios/SpeechRecognition'

  target 'VoiceTranslatorTests' do
    inherit! :complete
    # Pods for testing
  end

  post_install do |installer|
    react_native_post_install(
      installer,
      # Set `mac_catalyst_enabled` to `true` in order to apply patches
      # necessary for Mac Catalyst builds
      :mac_catalyst_enabled => false
    )
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
    
    # ONNX Runtime specific configurations
    installer.pods_project.targets.each do |target|
      if target.name == 'onnxruntime-objc'
        target.build_configurations.each do |config|
          config.build_settings['ENABLE_BITCODE'] = 'NO'
          config.build_settings['VALID_ARCHS'] = 'arm64 x86_64'
        end
      end
    end
  end
end

